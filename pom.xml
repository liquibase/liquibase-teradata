<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.liquibase.ext</groupId>
	<artifactId>liquibase-teradata</artifactId>
	<name>Liquibase Teradata extension</name>
	<version>3.3.0-SNAPSHOT</version>
	<description>Adds support for Teradata Database to Liquibase</description>
	<url>http://www.liquibase.org</url>

	<organization>
		<name>Liquibase.org</name>
		<url>http://www.liquibase.org</url>
	</organization>

	<licenses>
		<license>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<name>Apache License, Version 2.0</name>
		</license>
	</licenses>

	<issueManagement>
		<url>https://github.com/liquibase/liquibase-teradata/issues</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com:liquibase/liquibase-teradata.git</connection>
		<url>https://github.com/liquibase/liquibase-teradata</url>
	</scm>

	<prerequisites>
		<maven>3.0.5</maven>
	</prerequisites>

	<properties>
		<java.version>1.6</java.version>
		<maven.dependency.plugin.failOnWarning>true</maven.dependency.plugin.failOnWarning>
	</properties>

	<developers>
		<developer>
			<id>nvoxland</id>
			<name>Nathan Voxland</name>
			<email>nathan.voxland@liquibase.org</email>
			<url>http://nathan.voxland.net</url>
			<organizationUrl>http://nathan.voxland.net/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>3.8.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.12</version>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<optimize>true</optimize>
						<debug>true</debug>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<stagingRepository>/tmp/maven-snapshot</stagingRepository>
						<mavenExecutorId>forked-path</mavenExecutorId>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.5</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>default-deploy</id>
							<phase>deploy</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<serverId>sonatype-nexus-staging</serverId>
						<nexusUrl>https://oss.sonatype.org/service/local/staging/deploy/maven2/</nexusUrl>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<executions>
						<execution>
							<id>enforce-java</id>
							<phase>compile</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireJavaVersion>
										<version>${java.version}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>

						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.0.5</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>

						<execution>
							<id>enforce-bytecode-version</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<enforceBytecodeVersion>
										<maxJdkVersion>${java.version}</maxJdkVersion>
									</enforceBytecodeVersion>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<!-- Analyzes the dependencies in the verify phase (by default) of every 
					child by default to check if a transitive dependency is used but undeclared 
					and is unused but declared. Every child project could skip this check for 
					the corresponding dependencies by using <ignoredUsedUndeclaredDependencies> 
					and <ignoredUnusedDeclaredDependencies> -->
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>analyze</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<!-- By default fail the build if the analysis is not succeed -->
							<failOnWarning>${maven.dependency.plugin.failOnWarning}</failOnWarning>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>


	</build>


	<distributionManagement>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>